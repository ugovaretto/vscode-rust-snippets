{
    // Place your snippets for rust here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    //  "prefix": "log",
    //  "body": [
    //      "console.log('$1');",
    //      "$2"
    //  ],
    //  "description": "Log output to console"
	// }
	// On Mac: /Users/$USER/Library/Application Support/Code/User/snippets
    "If_Let_Err": {
        "prefix": "iferr",
        "body": [
            "if let Err(err) = $1 {",
            "\teprintln!(\"Error $1 - {}\", err);",
            "}"],
        "description": "Check Err() in 'if let'"    
    },
    "If_Let_Ok": {
        "prefix": "ifok",
        "body": [
            "if let Ok(ok) = $1 {",
            "\tok",
            "}"],
        "description": "Check Ok() in 'if let'" 
    },
    "If_Let_Some": {
        "prefix": "ifsome",
        "body": [
            "if let Some($1) = $2 {",
            "\t$1",
            "}"],
        "description": "Check Some() in 'if let'" 
    },
    "Let_Match": {
        "prefix": "letmatch",
        "body": [
            "let $1 = match $2 {",
            "\t",
            "}"],
        "description": "let match" 
    },
}